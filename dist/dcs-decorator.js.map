{"version":3,"file":"dcs-decorator.js","sources":["../../dcs-shared/src/utils.js","../../dcs-shared/src/DcsTag.js","../node_modules/bellhop-iframe/src/BellhopEventDispatcher.js","../node_modules/bellhop-iframe/src/Bellhop.js","../src/comToPlugin.js","../src/htmlBased.js","../src/dcs-decorator.js"],"sourcesContent":["//------------------------------------------------------------------------------\r\n\r\nexport const u = {}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nu.windowName = () => {\r\n  let res = 'Docuss'\r\n  if (typeof window !== 'undefined') {\r\n    res = window.name.trim() || document.title.trim() || res\r\n  } else {\r\n    // https://stackoverflow.com/a/26614875/3567351\r\n    res = require(__dirname + '/package.json').name || res\r\n  }\r\n  return res.substring(0, 12)\r\n}\r\n\r\nu.log = (...args) => {\r\n  args = [`%c${u.windowName()} -`, 'color:grey', ...args]\r\n  console.log(...args)\r\n}\r\n\r\nu.logError = (...args) => {\r\n  args = [\r\n    `%c${u.windowName()} %c- Docuss Error -`,\r\n    'color:grey',\r\n    'color:red',\r\n    ...args\r\n  ]\r\n  console.log(...args)\r\n}\r\n\r\nu.logWarning = (...args) => {\r\n  args = [\r\n    `%c${u.windowName()} %c- Docuss Warning -`,\r\n    'color:grey',\r\n    'color:orange',\r\n    ...args\r\n  ]\r\n  console.log(...args)\r\n}\r\n\r\nclass DocussError extends Error {\r\n  constructor(msg) {\r\n    super(msg)\r\n    this.name = 'DocussError'\r\n  }\r\n}\r\n\r\nu.throw = msg => {\r\n  throw new DocussError(msg)\r\n}\r\n\r\nu.throwIf = (cond, msg) => cond && u.throw(msg)\r\nu.throwIfNot = (cond, msg) => !cond && u.throw(msg)\r\n\r\n// Functions from the \"dev\" field might be striped out of production code\r\nu.dev = {\r\n  assert: (cond, msg) =>\r\n    u.throwIf(!cond, `Assertion Failed${msg ? ' - ' + msg : ''}`),\r\n  log: u.log,\r\n  logWarning: u.logWarning,\r\n  logError: u.logError\r\n}\r\n\r\n// Return true if we are in an iframe\r\n// https://stackoverflow.com/a/326076/3567351\r\nu.inIFrame = () => {\r\n  try {\r\n    return window.self !== window.top\r\n  } catch (e) {\r\n    return true\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n/*\r\n// https://stackoverflow.com/a/41532415/3567351\r\n// https://stackoverflow.com/questions/6393943/convert-javascript-string-in-dot-notation-into-an-object-reference/6394168#6394168\r\n\r\nu.get = function(obj, fieldNameDotNotation) {\r\n  return fieldNameDotNotation.split('.').reduce((o, i) => o[i], obj)\r\n}\r\n*/\r\n\r\n/*\r\nu.pick = (o, keys) =>\r\n  o\r\n    ? keys.reduce((res, key) => {\r\n        if (o.hasOwnProperty(key)) {\r\n          res[key] = o[key]\r\n        }\r\n        return res\r\n      }, {})\r\n    : o\r\n\r\nu.omit = (o, keys) =>\r\n  o\r\n    ? Object.keys(o).reduce((res, key) => {\r\n        if (!keys.includes(key)) {\r\n          res[key] = o[key]\r\n        }\r\n        return res\r\n      }, {})\r\n    : o\r\n*/\r\n\r\n//------------------------------------------------------------------------------\r\n/*\r\n// https://stackoverflow.com/a/265125/3567351\r\n// https://stackoverflow.com/a/26127647/3567351\r\nconst c = document.cookie\r\nconsole.log('c: ', c)\r\nconst loadedFromBrowserCache = c.includes('loadedFromBrowserCache=false')\r\n  ? false\r\n  : c.includes('loadedFromBrowserCache=true') ? true : undefined\r\ndocument.cookie = 'loadedFromBrowserCache=true'\r\n\r\n// Return true if the current page has been loaded from the browser cache\r\nu.loadedFromBrowserCache = () => {\r\n  u.throwIf(\r\n    loadedFromBrowserCache === undefined,\r\n    'Missing cookie \"loadedFromBrowserCache\". Check your server.'\r\n  )\r\n  return loadedFromBrowserCache\r\n}\r\n*/\r\n//------------------------------------------------------------------------------\r\n\r\n/*\r\n// https://stackoverflow.com/a/31991870/3567351\r\n// Notice that the npm packages is-absolute-url and is-relative-url fail for\r\n// url of type //google.com/blablabla\r\nconst absoluteUrlRegex = /(?:^[a-z][a-z0-9+.-]*:|\\/\\/)/i\r\ndcsQuery.isAbsoluteUrl = url => absoluteUrlRegex.test(url)\r\n*/\r\n//------------------------------------------------------------------------------\r\n\r\n/*\r\n// https://stackoverflow.com/a/4314050\r\nu.spliceStr = (str, start, delCount, insertStr) =>\r\n  str.slice(0, start) + insertStr + str.slice(start + Math.abs(delCount))\r\n*/\r\n\r\n// Use like this:\r\n// u.async.promiseState(a).then(state => console.log(state)); // Output: fulfilled | rejected | pending\r\nu.async = {\r\n  // https://stackoverflow.com/a/35820220/3567351\r\n  promiseState(p) {\r\n    const t = {}\r\n    return Promise.race([p, t]).then(\r\n      v => (v === t ? 'pending' : 'fulfilled'),\r\n      () => 'rejected'\r\n    )\r\n  },\r\n\r\n  // Call like this: delay(1000).then(() => { do_something })\r\n  delay: ms => new Promise(resolve => setTimeout(resolve, ms)),\r\n\r\n  // Retry calling fn until:\r\n  // - it returns a truthy value (or a Promise resolving to truthy)\r\n  // - retries is reached, in which case the function return a rejected promise\r\n  retry: (fn, retries, res = undefined) =>\r\n    retries === 0\r\n      ? Promise.reject(res)\r\n      : Promise.resolve(fn(res, retries)).then(\r\n          res => res || u.async.retry(fn, retries - 1, res)\r\n        ),\r\n\r\n  // Call like this: retryDelay(fn, 5, 1000).then(() => { do_something }), fn\r\n  // being a function that might returns a promise\r\n  retryDelay(fn, retries, ms, err = undefined) {\r\n    const fnDelayed = retries => u.async.delay(ms).then(() => fn(retries))\r\n    try {\r\n      return retries === 0\r\n        ? Promise.reject(err)\r\n        : Promise.resolve(fn(retries)).then(\r\n            res => res || u.async.retryDelay(fnDelayed, retries - 1)\r\n          )\r\n    } catch (e) {\r\n      return Promise.reject(e)\r\n    }\r\n  },\r\n\r\n  // Resolve to undefined if not found (never reject)\r\n  // A bit complex because we support  finding in an array of promises\r\n  find: (array, fn, err = null) =>\r\n    !array || array.length === 0\r\n      ? Promise.resolve(undefined)\r\n      : Promise.resolve(fn(array[0])).then(res =>\r\n          res ? array[0] : u.async.find(array.slice(1), fn, err)\r\n        )\r\n}\r\n\r\nu.dom = {\r\n  // Resolve when DOM is ready\r\n  onDOMReady() {\r\n    return new Promise(resolve => {\r\n      if (document.readyState !== 'loading') {\r\n        resolve()\r\n      } else {\r\n        document.addEventListener('DOMContentLoaded', resolve)\r\n      }\r\n    })\r\n  },\r\n\r\n  // https://github.com/imagitama/nodelist-foreach-polyfill/blob/master/index.js\r\n  forEach(nodeList, callback, scope) {\r\n    // Duplicate the list, so that we can iterate over a dynamic node list\r\n    // returned by getElementsByClassName() and the likes. If we don't, the\r\n    // following won't work, as we change the list dynamically while we iterate\r\n    // over it:\r\n    // u.dom.forEach(document.getElementsByClassName('toto'), node => node.classList.remove('toto'))\r\n    const list = [...nodeList]\r\n    for (let i = 0; i < list.length; i++) {\r\n      callback.call(scope || window, list[i], i)\r\n    }\r\n  },\r\n\r\n  wrap(el, wrapper) {\r\n    el.parentNode.insertBefore(wrapper, el)\r\n    wrapper.appendChild(el)\r\n    return wrapper\r\n  },\r\n\r\n  wrapAll(elArray, wrapper) {\r\n    if (elArray && elArray.length) {\r\n      // Duplicate the array in case it is a DOM nodeList than would be modified\r\n      // while we move elements\r\n      const copyArray = Array.prototype.slice.call(elArray)\r\n      copyArray[0].parentNode.insertBefore(wrapper, copyArray[0])\r\n      copyArray.forEach(el => wrapper.appendChild(el))\r\n    }\r\n    return wrapper\r\n  },\r\n\r\n  createElement(htmlString) {\r\n    const div = document.createElement('div')\r\n    div.innerHTML = htmlString.trim()\r\n    return div.firstChild\r\n  }\r\n}\r\n\r\nu.dot = {\r\n  set(obj, name, value) {\r\n    const split = name.split('.')\r\n    u.throwIf(!split.length)\r\n    const lastName = split.pop()\r\n    const o = split.reduce((o, n) => (o[n] = {}), obj)\r\n    o[lastName] = value\r\n  },\r\n  get(obj, name) {\r\n    return name\r\n      .split('.')\r\n      .reduce((o, n) => (o !== undefined ? o[n] : undefined), obj)\r\n  }\r\n}\r\n","import { u } from './utils.js'\r\n\r\n// A docuss tag is of the form: dcs-PAGENAME-CLIENTROUTE-TRIGGERID\r\n\r\n// DON'T USE 'THIS' IN OBJECT LITERALS:\r\n// http://closuretools.blogspot.com/2012/09/which-compilation-level-is-right-for-me.html\r\n\r\nexport const DcsTag = {\r\n  _PREFIX: 'dcs',\r\n  _TAG_PART_REGEX: /[^0-9A-Za-z_]+/g,\r\n  _settings: null,\r\n\r\n  /**\r\n   *  @param {*} settings\r\n   *  @param {Number} settings.maxPageNameLength\r\n   *  @param {Number} settings.maxTriggerIdLength\r\n   *  @param {boolean} settings.forceLowercase\r\n   */\r\n  init(settings) {\r\n    // Check\r\n    u.dev.assert(\r\n      typeof settings.maxPageNameLength === 'number' &&\r\n        settings.maxPageNameLength >= 1\r\n    )\r\n    u.dev.assert(\r\n      typeof settings.maxTriggerIdLength === 'number' &&\r\n        settings.maxTriggerIdLength >= 1\r\n    )\r\n    u.dev.assert(typeof settings.forceLowercase === 'boolean')\r\n    DcsTag._settings = settings\r\n  },\r\n\r\n  _checkInit() {\r\n    u.dev.assert(DcsTag._settings, 'DcsTag not initialized')\r\n  },\r\n\r\n  getSettings() {\r\n    DcsTag._checkInit()\r\n    return DcsTag._settings\r\n  },\r\n\r\n  build({ pageName, triggerId }) {\r\n    DcsTag.checkPartThrow(\r\n      pageName,\r\n      'pageName',\r\n      DcsTag._settings.maxPageNameLength\r\n    )\r\n    triggerId &&\r\n      DcsTag.checkPartThrow(\r\n        triggerId,\r\n        'triggerId',\r\n        DcsTag._settings.maxTriggerIdLength\r\n      )\r\n    return triggerId\r\n      ? `${DcsTag._PREFIX}-${pageName}-${triggerId}`\r\n      : `${DcsTag._PREFIX}-${pageName}`\r\n  },\r\n\r\n  parse(dcsTag) {\r\n    DcsTag._checkInit()\r\n\r\n    const split = dcsTag.split('-')\r\n\r\n    if (split.shift() !== DcsTag._PREFIX) {\r\n      return null\r\n    }\r\n\r\n    const pageName = split.shift()\r\n    if (!DcsTag.checkPart(pageName, DcsTag._settings.maxPageNameLength)) {\r\n      // u.throw(`Invalid dcsTag \"${dcsTag}\": invalid part page name`)\r\n      return null\r\n    }\r\n\r\n    const triggerId = split.shift()\r\n    if (\r\n      triggerId &&\r\n      !DcsTag.checkPart(triggerId, DcsTag._settings.maxTriggerIdLength)\r\n    ) {\r\n      //u.throw(`Invalid dcsTag \"${dcsTag}\": invalid part triggerId`)\r\n      return null\r\n    }\r\n\r\n    return { pageName, triggerId }\r\n  },\r\n\r\n  maxTagLength() {\r\n    DcsTag._checkInit()\r\n    return (\r\n      DcsTag._PREFIX.length +\r\n      DcsTag._settings.maxPageNameLength +\r\n      DcsTag._settings.maxTriggerIdLength +\r\n      2\r\n    )\r\n  },\r\n\r\n  checkPart(part, maxLength) {\r\n    DcsTag._checkInit()\r\n    return (\r\n      part &&\r\n      part.length <= maxLength &&\r\n      !part.match(DcsTag._TAG_PART_REGEX) &&\r\n      (!DcsTag.forceLowercaseTags || part === part.toLowerCase())\r\n    )\r\n  },\r\n\r\n  checkPartThrow(part, name, maxLength) {\r\n    if (!DcsTag.checkPart(part, maxLength)) {\r\n      u.throw(`Invalid dcsTag part ${name}=\"${part}\"`)\r\n    }\r\n  },\r\n\r\n  // See https://github.com/discourse/discourse/blob/acd1693dac1bff6ff50250d942134bc48a27ff14/lib/discourse_tagging.rb#L206\r\n  cleanPart(part, maxLength) {\r\n    const res = part\r\n      .substring(0, maxLength)\r\n      .replace(DcsTag._TAG_PART_REGEX, '_')\r\n    return DcsTag.forceLowercase ? res.toLowerCase() : res\r\n  }\r\n}\r\n","/**\n * Function with a added priority type\n * @typedef {Function} PriorityFunction\n * @property {number} _priority\n */\n\n/**\n * Generic event dispatcher\n * @class  BellhopEventDispatcher\n */\nexport class BellhopEventDispatcher {\n  /**\n   *  The collection of event listeners\n   *  @property {Object} _listeners\n   *  @private\n   */\n  constructor() {\n    this._listeners = {};\n  }\n\n  /**\n   *  Add an event listener to the listen to an event from either the parent or iframe\n   *  @method on\n   *  @param {String} name The name of the event to listen\n   *  @param {PriorityFunction} callback The handler when an event is triggered\n   *  @param {number} [priority=0] The priority of the event listener. Higher numbers are handled first.\n   */\n  on(name, callback, priority = 0) {\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n    callback._priority = parseInt(priority) || 0;\n\n    // If callback is already set to this event\n    if (-1 !== this._listeners[name].indexOf(callback)) {\n      return;\n    }\n\n    this._listeners[name].push(callback);\n\n    if (this._listeners[name].length > 1) {\n      this._listeners[name].sort(this.listenerSorter);\n    }\n  }\n\n  /**\n   * @private\n   * @param {PriorityFunction} a\n   * @param {PriorityFunction} b\n   * @returns {number};\n   *  Sorts listeners added by .on() by priority\n   */\n  listenerSorter(a, b) {\n    return a._priority - b._priority;\n  }\n\n  /**\n   *  Remove an event listener\n   *  @method off\n   *  @param {String} name The name of event to listen for. If undefined, remove all listeners.\n   *  @param {Function} [callback] The optional handler when an event is triggered, if no callback\n   *         is set then all listeners by type are removed\n   */\n  off(name, callback) {\n    if (this._listeners[name] === undefined) {\n      return;\n    }\n\n    if (callback === undefined) {\n      delete this._listeners[name];\n      return;\n    }\n\n    const index = this._listeners[name].indexOf(callback);\n\n    -1 < index ? this._listeners[name].splice(index, 1) : undefined;\n  }\n\n  /**\n   *  Trigger any event handlers for an event type\n   *  @method trigger\n   *  @param {object | String} event The event to send\n   *  @param {object} [data = {}] optional data to send to other areas in the app that are listening for this event\n   */\n  trigger(event, data = {}) {\n    if (typeof event == 'string') {\n      event = {\n        type: event,\n        data: 'object' === typeof data && null !== data ? data : {}\n      };\n    }\n\n    if ('undefined' !== typeof this._listeners[event.type]) {\n      for (let i = this._listeners[event.type].length - 1; i >= 0; i--) {\n        this._listeners[event.type][i](event);\n      }\n    }\n  }\n\n  /**\n   * Reset the listeners object\n   * @method  destroy\n   */\n  destroy() {\n    this._listeners = {};\n  }\n}\n","import { BellhopEventDispatcher } from './BellhopEventDispatcher.js';\n\n/**\n *  Abstract the communication layer between the iframe\n *  and the parent DOM\n *  @class Bellhop\n *  @extends BellhopEventDispatcher\n */\nexport class Bellhop extends BellhopEventDispatcher {\n  /**\n   * Creates an instance of Bellhop.\n   * @memberof Bellhop\n   * @param { string | number } id the id of the Bellhop instance\n   */\n  constructor(id = (Math.random() * 100) | 0) {\n    super();\n\n    /**\n     *  The instance ID for bellhop\n     *  @property {string} id\n     */\n    this.id = `BELLHOP:${id}`;\n    /**\n     *  If we are connected to another instance of the bellhop\n     *  @property {Boolean} connected\n     *  @readOnly\n     *  @default false\n     *  @private\n     */\n    this.connected = false;\n\n    /**\n     *  If this instance represents an iframe instance\n     *  @property {Boolean} isChild\n     *  @private\n     *  @default true\n     */\n    this.isChild = true;\n\n    /**\n     *  If we are current trying to connec\n     *  @property {Boolean} connecting\n     *  @default false\n     *  @private\n     */\n    this.connecting = false;\n\n    /**\n     *  If using cross-domain, the domain to post to\n     *  @property {string} origin\n     *  @private\n     *  @default \"*\"\n     */\n    this.origin = '*';\n\n    /**\n     *  Save any sends to wait until after we're done\n     *  @property {Array} _sendLater\n     *  @private\n     */\n    this._sendLater = [];\n\n    /**\n     * The iframe element\n     * @property {HTMLIFrameElement} iframe\n     * @private\n     * @readOnly\n     */\n    this.iframe = null;\n  }\n\n  /**\n   *  The connection has been established successfully\n   *  @event connected\n   */\n\n  /**\n   *  Connection could not be established\n   *  @event failed\n   */\n\n  /**\n   *  Handle messages in the window\n   *  @method receive\n   *  @param { MessageEvent } message the post message received from another bellhop instance\n   *  @private\n   */\n  receive(message) {\n    // Ignore messages that don't originate from the target\n    // we're connected to\n    if (this.target !== message.source) {\n      return;\n    }\n\n    // If this is not the initial connection message\n    if (message.data !== 'connected') {\n      let data = message.data;\n      // Check to see if the data was sent as a stringified json\n      if ('string' === typeof data) {\n        try {\n          data = JSON.parse(data);\n        } catch (err) {\n          console.error('Bellhop error: ', err);\n        }\n      }\n      if (this.connected && 'object' === typeof data && data.type) {\n        this.trigger(data);\n      }\n      return;\n    }\n    // Else setup the connection\n    this.onConnectionReceived(message.data);\n  }\n  /**\n   * @memberof Bellhop\n   * @param {object} message the message received from the other bellhop instance\n   * @private\n   */\n  onConnectionReceived(message) {\n    this.connecting = false;\n    this.connected = true;\n\n    // Be polite and respond to the child that we're ready\n    if (!this.isChild) {\n      this.target.postMessage(message, this.origin);\n    }\n\n    // If we have any sends waiting to send\n    // we are now connected and it should be okay\n    for (let i = 0; i < this._sendLater.length; i++) {\n      const { type, data } = this._sendLater[i];\n      this.send(type, data);\n    }\n    this._sendLater.length = 0;\n\n    // If there is a connection event assigned call it\n    this.trigger('connected');\n  }\n\n  /**\n   *  Setup the connection\n   *  @method connect\n   *  @param {HTMLIFrameElement} iframe The iframe to communicate with. If no value is set, the assumption\n   *         is that we're the child trying to communcate with our window.parent\n   *  @param {String} [origin=\"*\"] The domain to communicate with if different from the current.\n   *  @return {Bellhop} Return instance of current object\n   */\n  connect(iframe, origin = '*') {\n    // Ignore if we're already trying to connect\n    if (this.connecting) {\n      return;\n    }\n\n    // Disconnect from any existing connection\n    this.disconnect();\n\n    // We are trying to connect\n    this.connecting = true;\n\n    // The iframe if we're the parent\n    if (iframe instanceof HTMLIFrameElement) {\n      this.iframe = iframe;\n    }\n\n    // The instance of bellhop is inside the iframe\n    this.isChild = iframe === undefined;\n\n    this.supported = true;\n    if (this.isChild) {\n      // for child pages, the window passed must be a different window\n      this.supported = window != iframe;\n    }\n\n    this.origin = origin;\n\n    window.addEventListener('message', this.receive.bind(this));\n\n    if (this.isChild) {\n      // No parent, can't connect\n      if (window === this.target) {\n        this.trigger('failed');\n      } else {\n        // If connect is called after the window is ready\n        // we can go ahead and send the connect message\n        this.target.postMessage('connected', this.origin);\n      }\n    }\n  }\n\n  /**\n   *  Disconnect if there are any open connections\n   *  @method disconnect\n   */\n  disconnect() {\n    this.connected = false;\n    this.connecting = false;\n    this.origin = null;\n    this.iframe = null;\n    this.isChild = true;\n    this._sendLater.length = 0;\n\n    window.removeEventListener('message', this.receive);\n  }\n\n  /**\n   *  Send an event to the connected instance\n   *  @method send\n   *  @param {string} type name/type of the event\n   *  @param {*} [data = {}] Additional data to send along with event\n   */\n  send(type, data = {}) {\n    if (typeof type !== 'string') {\n      throw 'The event type must be a string';\n    }\n\n    const message = {\n      type,\n      data\n    };\n\n    if (this.connecting) {\n      this._sendLater.push(message);\n    } else {\n      this.target.postMessage(JSON.stringify(message), this.origin);\n    }\n  }\n\n  /**\n   *  A convenience method for sending and the listening to create\n   *  a singular link to fetching data. This is the same calling send\n   *  and then getting a response right away with the same event.\n   *  @method fetch\n   *  @param {String} event The name of the event\n   *  @param {Function} callback The callback to call after, takes event object as one argument\n   *  @param {Object} [data = {}] Optional data to pass along\n   *  @param {Boolean} [runOnce=false] If we only want to fetch once and then remove the listener\n   */\n  fetch(event, callback, data = {}, runOnce = false) {\n    if (!this.connecting && !this.connected) {\n      throw 'No connection, please call connect() first';\n    }\n\n    const internalCallback = e => {\n      if (runOnce) {\n        this.off(e.type, internalCallback);\n      }\n\n      callback(e);\n    };\n\n    this.on(event, internalCallback);\n    this.send(event, data);\n  }\n\n  /**\n   *  A convience method for listening to an event and then responding with some data\n   *  right away. Automatically removes the listener\n   *  @method respond\n   *  @param {String} event The name of the event\n   *  @param {Object | function} [data = {}] The object to pass back.\n   *  \tMay also be a function; the return value will be sent as data in this case.\n   *  @param {Boolean} [runOnce=false] If we only want to respond once and then remove the listener\n   */\n  respond(event, data = {}, runOnce = false) {\n    const internalCallback = e => {\n      if (runOnce) {\n        this.off(e.type, internalCallback);\n      }\n      this.send(event, 'function' === typeof data ? data() : data);\n    };\n    this.on(event, internalCallback);\n  }\n\n  /**\n   *  Destroy and don't user after this\n   *  @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.disconnect();\n    this._sendLater.length = 0;\n  }\n\n  /**\n   *\n   * Returns the correct parent element for Bellhop's context\n   * @readonly\n   * @memberof Bellhop\n   */\n  get target() {\n    return this.isChild ? window.parent : this.iframe.contentWindow;\n  }\n}\n","import * as comTypes from './com-types'\r\nimport { Bellhop } from 'bellhop-iframe'\r\n//import { Bellhop } from '../../Bellhop/src/Bellhop'\r\nimport { u } from '../../dcs-shared/src/utils'\r\nimport { DcsTag } from '../../dcs-shared/src/DcsTag.js'\r\n\r\nexport { u, DcsTag }\r\n\r\nclass ComToPlugin {\r\n  //----------------------------------------------------------------------------\r\n\r\n  constructor() {\r\n    this._bellhop = new Bellhop()\r\n    this._timer = null\r\n    this._onConnected = null\r\n\r\n    // This is called avery time the iframe reloads\r\n    this._bellhop.on('connected', () => {\r\n      if (this._timer) {\r\n        clearTimeout(this._timer)\r\n        this._timer = null\r\n      }\r\n      this._onConnected && this._onConnected()\r\n    })\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n\r\n  /**\r\n   * @param {Object} arg\r\n   * @param {string} arg.discourseOrigin\r\n   * @param {OnConnectedCallback} arg.onConnected\r\n   * @param {number} arg.timeout\r\n   * @param {OnTimeoutCallback} arg.onTimeout\r\n   */\r\n\r\n  connect({ discourseOrigin, onConnected, timeout, onTimeout }) {\r\n    u.throwIf(!u.inIFrame())\r\n    this._onConnected = onConnected\r\n    this._timer = timeout\r\n      ? setTimeout(() => {\r\n          onTimeout && onTimeout()\r\n        }, timeout)\r\n      : null\r\n    this._bellhop.connect(undefined, discourseOrigin)\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n\r\n  /**\r\n   * @callback OnDiscourseRoutePushedCallback\r\n   * @param {RouteAndDescrAndCountsAndContext}\r\n   */\r\n  /**\r\n   *  @param {OnDiscourseRoutePushedCallback} cb\r\n   */\r\n  onDiscourseRoutePushed(cb) {\r\n    this._bellhop.on('m2', e => cb(e.data))\r\n  }\r\n\r\n  /**\r\n   * @callback OnCountsChangedCallback\r\n   * @param {Counts}\r\n   */\r\n  /**\r\n   *  @param {OnCountsChangedCallback} cb\r\n   */\r\n  onCountsChanged(cb) {\r\n    this._bellhop.on('m3', e => cb(e.data))\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n\r\n  /**\r\n   * @param {RouteAndModeAndContext}\r\n   */\r\n  postSetDiscourseRoute({ route, mode, clientContext }) {\r\n    this._bellhop.send('m4', arguments[0])\r\n  }\r\n\r\n  /**\r\n   * @param {HashAndMode}\r\n   */\r\n  postSetHash({ hash, mode }) {\r\n    this._bellhop.send('m5', arguments[0])\r\n  }\r\n\r\n  /**\r\n   * @param {RouteProps} props\r\n   */\r\n  postSetRouteProps({ category, discourseTitle, error }) {\r\n    this._bellhop.send('m6', arguments[0])\r\n  }\r\n\r\n  /**\r\n   * @param {[Redirect]} redirects\r\n   */\r\n  postSetRedirects(redirects) {\r\n    this._bellhop.send('m7', redirects)\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n}\r\n\r\nexport const comToPlugin = new ComToPlugin()\r\n","import { u } from '../../dcs-shared/src/utils'\r\nimport { DcsTag } from '../../dcs-shared/src/DcsTag.js'\r\nimport { comToPlugin } from './comToPlugin'\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport { u, DcsTag, comToPlugin }\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nclass HtmlBasedClass {\r\n  constructor() {\r\n    this.selTriggerNode = null\r\n    this.resizeTimer = null\r\n    comToPlugin.onDiscourseRoutePushed(this._onDiscourseRoutePushed.bind(this))\r\n    comToPlugin.onCountsChanged(({ counts }) => console.log('counts: ', counts))\r\n  }\r\n\r\n  connect({ discourseOrigin, timeout }) {\r\n    return new Promise((resolve, reject) => {\r\n      // Establish communication with the Discourse plugin\r\n      this.resolveInit = resolve\r\n      comToPlugin.connect({\r\n        discourseOrigin,\r\n        timeout,\r\n        onTimeout: () => reject('timeout')\r\n      })\r\n    })\r\n  }\r\n\r\n  parseDom({ descr, pageName, counts }) {\r\n    // Convert page relative url to absolute url, for comparison with <a> href.\r\n    const pages = descr.staticPages || []\r\n    pages.forEach(page => {\r\n      let parsedUrl = new URL(page['url'], location.href)\r\n      page.url = parsedUrl.href\r\n    })\r\n\r\n    return u.dom.onDOMReady().then(() => {\r\n      // Modify the document links so that they open the correct url in the\r\n      // correct place\r\n      u.dom.forEach(document.getElementsByTagName('a'), a => {\r\n        if (a.dataset.dcsDiscourseLink) {\r\n          a.onclick = e => {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            comToPlugin.postSetDiscourseRoute({\r\n              route: { layout: 'FULL_DISCOURSE', path: a.pathname },\r\n              mode: 'PUSH',\r\n              clientContext: true\r\n            })\r\n          }\r\n        } else if (a.href.split('#')[0] === location.href.split('#')[0]) {\r\n          // In case it is an anchor (internal link), we need to notify\r\n          // the parent window AND keep the default anchor behavior)\r\n          a.onclick = () => {\r\n            comToPlugin.postSetHash({ hash: a.hash, mode: 'REPLACE' })\r\n          }\r\n        } else {\r\n          // In case it is an external link\r\n          const url = a.href.split('#')[0]\r\n          const page = descr.staticPages.find(p => p.url === url)\r\n          if (page) {\r\n            // Case the external link points to another page of the website\r\n\r\n            // Change the href so that cmd+click or right click+... will open\r\n            // the Discourse instance in another tab\r\n            a.href = document.referrer + 'docuss/' + page.name\r\n\r\n            // Regarding the simple click, cancel the default behavior and\r\n            // let Discourse load the target page\r\n            if (!a.target || a.target === '_self') {\r\n              a.onclick = e => {\r\n                e.preventDefault()\r\n                e.stopPropagation()\r\n                comToPlugin.postSetDiscourseRoute({\r\n                  route: { layout: 'FULL_CLIENT', pageName: page.name },\r\n                  mode: 'PUSH',\r\n                  clientContext: true\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            // Case the external link points to another website\r\n            if (!a.target || a.target === '_self') {\r\n              a.target = '_parent'\r\n            }\r\n          }\r\n        }\r\n      })\r\n\r\n      // Set the additional redirects\r\n      // Remember that a same triggerId can have several node with different\r\n      // dcsHighlightable property value. So we consider a trigger as\r\n      // highligthable if any of its nodes is highligthable\r\n      const nodes = document.getElementsByClassName('dcs-trigger')\r\n      const ids = {}\r\n      u.dom.forEach(nodes, node => {\r\n        const triggerId = node.dataset.dcsTriggerId\r\n        const highlightable = ids[triggerId] || !!node.dataset.dcsHighlightable\r\n        ids[triggerId] = highlightable\r\n      })\r\n      const nonHighlitghables = Object.keys(ids).filter(id => !ids[id])\r\n      // Here you might be tempted, if there are only nonHighlitghables\r\n      // triggers in the page, to set a single generic redirect instead of one\r\n      // redirect per trigger. Don't do that. Imagine the consequence if the\r\n      // page already contains a static redirect for full page commenting\r\n      // (WITH_SPLIT_BAR => FULL_CLIENT). Yep, infinite loop.\r\n      const redirects = nonHighlitghables.map(triggerId => ({\r\n        src: { layout: 'WITH_SPLIT_BAR', triggerId, showRight: false },\r\n        dest: { layout: 'FULL_CLIENT' }\r\n      }))\r\n      comToPlugin.postSetRedirects(redirects)\r\n\r\n      // Add click events on triggers\r\n      const clickTargets =\r\n        '.dcs-icons, .dcs-trigger.dcs-no-balloon .dcs-trigger-span, .dcs-trigger.dcs-no-balloon.dcs-no-span'\r\n      u.dom.forEach(document.querySelectorAll(clickTargets), node => {\r\n        node.onclick = e => {\r\n          // Don't do anything if user is selecting text\r\n          if (window.getSelection().toString()) {\r\n            return\r\n          }\r\n\r\n          const triggerNode = e.target.closest('.dcs-trigger')\r\n          const triggerId = triggerNode.dataset.dcsTriggerId\r\n\r\n          this._selectTriggers(triggerId)\r\n\r\n          comToPlugin.postSetDiscourseRoute({\r\n            route: {\r\n              layout: 'WITH_SPLIT_BAR',\r\n              pageName: triggerNode.dataset.dcsPageName || pageName,\r\n              triggerId,\r\n              interactMode: triggerNode.dataset.dcsInteractMode,\r\n              showRight: true\r\n            },\r\n            mode: 'PUSH',\r\n            clientContext: true\r\n          })\r\n\r\n          // Mandatory because we want our global click event to fire only\r\n          // when user clicks on an empty space\r\n          e.stopPropagation()\r\n        }\r\n      })\r\n\r\n      this.runReady = true\r\n\r\n      // Case click nowhere special (all Docuss specific events ar handles\r\n      // elsewhere with preventDefault)\r\n\r\n      window.addEventListener('click', () => {\r\n        if (\r\n          this.selTriggerNode &&\r\n          this.selTriggerNode.dataset.dcsHighlightable\r\n        ) {\r\n          this._selectTriggers(null)\r\n          comToPlugin.postSetDiscourseRoute({\r\n            route: { layout: 'FULL_CLIENT', pageName },\r\n            mode: 'PUSH',\r\n            clientContext: true\r\n          })\r\n        }\r\n      })\r\n\r\n      // Resize event with debounce\r\n      // https://developer.mozilla.org/en-US/docs/Web/Events/resize#setTimeout\r\n      window.addEventListener('resize', evt => {\r\n        if (this.resizeTimer !== null) {\r\n          clearTimeout(this.resizeTimer)\r\n        }\r\n        this.resizeTimer = setTimeout(() => {\r\n          this.resizeTimer = null\r\n          if (this.selTriggerNode) {\r\n            _scrollIntoViewIfNeeded(this.selTriggerNode)\r\n          }\r\n        }, 100)\r\n      })\r\n\r\n      if (this.delayedRoute) {\r\n        this._onDiscourseRoutePushed({ route: this.delayedRoute })\r\n      }\r\n    })\r\n  }\r\n\r\n  _onDiscourseRoutePushed({ route, descr, counts, clientContext }) {\r\n    // Case init\r\n    if (this.resolveInit) {\r\n      this.resolveInit({ descr, pageName: route.pageName, counts })\r\n      delete this.resolveInit\r\n      DcsTag.init(descr.dcsTag)\r\n      this.runReady = false\r\n      this.delayedRoute = route\r\n      return\r\n    }\r\n\r\n    // Case we're still not ready\r\n    if (!this.runReady) {\r\n      this.delayedRoute = route\r\n      return\r\n    }\r\n\r\n    // Set the route category and title\r\n    if (route.layout === 'WITH_SPLIT_BAR') {\r\n      const triggerNode =\r\n        route.triggerId &&\r\n        document.querySelector(\r\n          `.dcs-trigger[data-dcs-trigger-id=\"${route.triggerId}\"]`\r\n        )\r\n      const category =\r\n        (triggerNode && triggerNode.dataset.dcsCategory) ||\r\n        document.documentElement.dataset.dcsCategory\r\n      const discourseTitle =\r\n        (triggerNode && triggerNode.dataset.dcsDiscourseTitle) ||\r\n        document.documentElement.dataset.dcsDiscourseTitle\r\n      comToPlugin.postSetRouteProps({ category, discourseTitle })\r\n    }\r\n\r\n    // clientContext === true means that this route changed has been\r\n    // triggered by us, so there is nothing more we need to do (because the\r\n    // trigger is already selected)\r\n    if (!clientContext) {\r\n      this._selectTriggers(route.triggerId)\r\n    }\r\n  }\r\n\r\n  // Remember there can be more than one trigger per triggerId\r\n  _selectTriggers(triggerId) {\r\n    u.dev.assert(this.runReady)\r\n\r\n    // Unselect everything\r\n    this.selTriggerNode = null\r\n    u.dom.forEach(document.getElementsByClassName('dcs-highlighted'), node =>\r\n      node.classList.remove('dcs-highlighted')\r\n    )\r\n\r\n    // Case there is nothing to select\r\n    if (!triggerId) {\r\n      return\r\n    }\r\n\r\n    // Look for the trigger node in the DOM\r\n    const triggerNodes = document.querySelectorAll(\r\n      `.dcs-trigger[data-dcs-trigger-id=\"${triggerId}\"]`\r\n    )\r\n\r\n    // Case tag not found\r\n    if (!triggerNodes.length) {\r\n      comToPlugin.postSetRouteProps({ error })\r\n      return\r\n    }\r\n\r\n    // Highlight the trigger and subsec nodes\r\n    u.dom.forEach(triggerNodes, node => {\r\n      if (node.dataset.dcsHighlightable) {\r\n        node.classList.add('dcs-highlighted')\r\n        const subsec = node.closest('.dcs-subsec')\r\n        subsec && subsec.classList.add('dcs-highlighted')\r\n      }\r\n    })\r\n\r\n    // Bring the first trigger node into view\r\n    // THIS IS REQUIRED WHEN LAYOUT HAS CHANGED, BUT ALSO WHEN USING THE BACK\r\n    // BUTTON TO A PREVIOUSLY SELECTED HEADING FAR AWAY\r\n    // Need a setTimeout, to ensure the layout change has occurred.\r\n    // 200 is the iframes animation duration + 30 for security\r\n    // +300 because some web sites (ex: VueJS API) have an animation when layout\r\n    // changes from narrow to wide screen.\r\n    this.selTriggerNode = triggerNodes[0]\r\n    setTimeout(() => _scrollIntoViewIfNeeded(this.selTriggerNode), 700)\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nfunction _scrollIntoViewIfNeeded(target) {\r\n  const rect = target.getBoundingClientRect()\r\n  // https://stackoverflow.com/a/22480938/3567351\r\n  const isPartiallyVisible = rect.top < window.innerHeight && rect.bottom >= 0\r\n  if (!isPartiallyVisible) {\r\n    target.scrollIntoView() // Set the element top to be at the top of the screen\r\n    window.scrollBy(0, -50) // Lower it a little bit\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport const htmlBased = new HtmlBasedClass()\r\n\r\n//------------------------------------------------------------------------------\r\n","import { u } from '../../dcs-shared/src/utils'\r\nimport { DcsTag } from '../../dcs-shared/src/DcsTag.js'\r\nimport { htmlBased } from './htmlBased'\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nif (u.inIFrame()) {\r\n  u.log('Docuss Decorator - Initializing...')\r\n  htmlBased\r\n    .connect({ discourseOrigin: '*', timeout: 10000 })\r\n    .then(args => modifyDom(args))\r\n    .then(args => htmlBased.parseDom(args))\r\n    .catch(e => {\r\n      if (typeof e === 'string') {\r\n        u.logError('Decorator - ' + e)\r\n      } else {\r\n        throw e\r\n      }\r\n    })\r\n} else {\r\n  u.log(\r\n    'Docuss Decorator - Could not run, as the page is not displayed in a Docuss iframe'\r\n  )\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nfunction modifyDom({ descr, pageName, counts }) {\r\n  // If no decorator, quit\r\n  const decorator = descr.clientData && descr.clientData.decorator\r\n  if (!decorator) {\r\n    throw 'No decorator found in json descriptor'\r\n  }\r\n\r\n  // Insert the additional CSS\r\n  const injectCss = (decorator.injectCss || []).reduce((res, a) => {\r\n    return includes(pageName, a.pageNames) ? res.concat(a.css) : res\r\n  }, [])\r\n  if (injectCss.length) {\r\n    const css = document.createElement('style')\r\n    css.type = 'text/css'\r\n    css.innerHTML = injectCss.join('\\n')\r\n    document.head.appendChild(css)\r\n  }\r\n\r\n  // Insert the global markup\r\n  const allProps = decorator.pageProperties || []\r\n  const pageProps = allProps.filter(p => includes(pageName, p.pageNames)).pop()\r\n  const category = (pageProps && pageProps.category) || decorator.category\r\n  const discourseTitle =\r\n    (pageProps && pageProps.discourseTitle) || decorator.discourseTitle\r\n  if (category) {\r\n    document.documentElement.dataset.dcsCategory = category\r\n  }\r\n  if (discourseTitle) {\r\n    document.documentElement.dataset.dcsDiscourseTitle = discourseTitle\r\n  }\r\n\r\n  // Insert the triggers' markup\r\n  const allTriggers = decorator.injectTriggers || []\r\n  const pageTriggers = allTriggers.filter(t => includes(pageName, t.pageNames))\r\n  const pageCounts = counts.filter(c => c.pageName === pageName)\r\n  return u.dom.onDOMReady().then(() => {\r\n    injectTriggers(pageTriggers, pageCounts)\r\n    u.log('Docuss Decorator - Ready')\r\n    return { descr, pageName, counts }\r\n  })\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nlet htmlIds\r\nlet htmlIdsNotFound\r\n\r\nfunction injectTriggers(triggers, counts) {\r\n  // Check if the page already contains Docuss markup\r\n  const dcsMarkup = !!document.querySelectorAll(\r\n    '.dcs-subsec, .dcs-trigger, .dcs-icons, .dcs-badge'\r\n  )\r\n  if (dcsMarkup.length) {\r\n    throw 'The page already contains Docuss markup'\r\n  }\r\n\r\n  htmlIdsNotFound = []\r\n\r\n  // Pre-fill the html ids with the non-html ids, to indicate they are reserved\r\n  htmlIds = triggers.reduce(\r\n    (res, t) => (Array.isArray(t.ids) ? res.concat(t.ids) : res),\r\n    []\r\n  )\r\n\r\n  triggers.forEach(trigger => addSubsections(trigger, counts))\r\n\r\n  if (htmlIdsNotFound.length) {\r\n    u.logWarning(\r\n      `Those triggers with id=\"GENERATE_FROM_HTML_ID\" were assigned generated ids because no html id was found:`,\r\n      htmlIdsNotFound\r\n    )\r\n  }\r\n}\r\n\r\nfunction addSubsections(trigger, counts) {\r\n  // Case there are no subsections\r\n  if (!trigger.ui.subsection) {\r\n    addTrigger(trigger, null, counts)\r\n    return\r\n  }\r\n\r\n  // Case there are subsections\r\n  const s = trigger.ui.subsection\r\n\r\n  // Get the beginning nodes\r\n  const beginNodes = document.querySelectorAll(s.begin)\r\n  if (!beginNodes.length) {\r\n    u.logWarning(`Found nothing with begin=\"${s.begin}\"`)\r\n  }\r\n\r\n  // Go through the subsecs\r\n  u.dom.forEach(beginNodes, bn => {\r\n    while (\r\n      bn.parentNode &&\r\n      bn.parentNode.querySelectorAll(s.begin).length === 1 &&\r\n      (!s.end || bn.parentNode.querySelectorAll(s.end).length === 0)\r\n    ) {\r\n      bn = bn.parentNode\r\n    }\r\n\r\n    // We create the subsection by picking beginNode and its following\r\n    // siblings until we reach beginSubsecSelector or endSubsecSelector\r\n    const endSelector = s.begin + (s.end ? ',' + s.end : '')\r\n    const subsecNodes = [bn]\r\n    let sibling = bn.nextSibling\r\n    while (sibling) {\r\n      if (\r\n        sibling.nodeType === 1 &&\r\n        (sibling.matches(endSelector) ||\r\n          sibling.querySelectorAll(endSelector).length)\r\n      ) {\r\n        break\r\n      }\r\n      subsecNodes.push(sibling)\r\n      sibling = sibling.nextSibling\r\n    }\r\n\r\n    // Create the subsec div\r\n    const subsecWrapper = document.createElement('div')\r\n    subsecWrapper.classList.add('dcs-subsec')\r\n    u.dom.wrapAll(subsecNodes, subsecWrapper)\r\n\r\n    // Add included cssSelector\r\n    addTrigger(trigger, subsecWrapper, counts)\r\n  })\r\n}\r\n\r\nfunction addTrigger(trigger, subsecNode, counts) {\r\n  const target = subsecNode || document\r\n  const triggerNodes = target.querySelectorAll(trigger.ui.cssSelector)\r\n  u.dom.forEach(triggerNodes, (node, index) => {\r\n    // Compute the triggerId\r\n    let triggerId\r\n    if (trigger.ids[0] === 'GENERATE_FROM_HTML_ID') {\r\n      triggerId = getHtmlId(node, subsecNode)\r\n    } else if (trigger.ids[0] === 'GENERATE') {\r\n      triggerId = getHtmlId(null, null)\r\n    } else {\r\n      triggerId = trigger.ids[index % trigger.ids.length]\r\n    }\r\n\r\n    // Store the data as DOM params. We do this instead of attaching the trigger\r\n    // object to the DOM node for 2 reasons:\r\n    // 1. Remember that the triggerId is not associated with a single trigger\r\n    // descriptor, but with a single node out of the many corresponding to a\r\n    // trigger descriptor.\r\n    // 2. We want developers to be able to use the docuss click handler without\r\n    // the decorator code, by adding the Docuss html markup by hand.\r\n    node.dataset.dcsTriggerId = triggerId\r\n    node.dataset.dcsInteractMode = trigger.interactMode\r\n    if (trigger.category) {\r\n      node.dataset.dcsCategory = trigger.category\r\n    }\r\n    if (trigger.discourseTitle) {\r\n      node.dataset.dcsDiscourseTitle = trigger.discourseTitle\r\n    }\r\n    if (trigger.ui.highlightable) {\r\n      node.dataset.dcsHighlightable = true\r\n    }\r\n\r\n    // Add the docuss class to the trigger. DO THIS AFTER LOOKING FOR THE HTML\r\n    // ID, as the dcs-trigger serves as a flag\r\n    node.classList.add('dcs-trigger')\r\n\r\n    // If required, insert span nodes around text parts\r\n    // See: https://stackoverflow.com/a/10730777/3567351\r\n    if (trigger.ui.insertTextSpan) {\r\n      /*\r\n      const span = document.createElement('span')\r\n      subsecWrapper.classList.add('dcs-trigger-span')\r\n      u.dom.wrapAll(tn.childNodes, span)\r\n      */\r\n      const w = document.createTreeWalker(\r\n        node,\r\n        NodeFilter.SHOW_TEXT,\r\n        null,\r\n        false\r\n      )\r\n      let textNode\r\n      while ((textNode = w.nextNode())) {\r\n        if (textNode.data.trim()) {\r\n          u.dom.wrap(\r\n            textNode,\r\n            u.dom.createElement('<span class=\"dcs-trigger-span\"></span>')\r\n          )\r\n        }\r\n      }\r\n    } else {\r\n      node.classList.add('dcs-no-span')\r\n    }\r\n\r\n    // Add the orange balloon icon if needed\r\n    let iconsHtml = ''\r\n    if (trigger.ui.insertBalloon) {\r\n      //iconsHtml += `<img src=\"http://headslap.me:7000/dcs-balloon.png\" />`\r\n      iconsHtml += `<i class=\"fas fa-comment\"></i>`\r\n    } else {\r\n      node.classList.add('dcs-no-balloon')\r\n    }\r\n\r\n    // Add the count badge icon if needed\r\n    if (trigger.ui.insertCountBadge) {\r\n      const record = counts.find(r => r.triggerId === triggerId)\r\n      if (record && record.count !== 0) {\r\n        iconsHtml += ` \r\n        <div class=\"dcs-badge\" title=\"This section has ${\r\n          record.count\r\n        } topic(s)\">\r\n          ${record.count}\r\n        </div>\r\n      `\r\n      }\r\n    }\r\n\r\n    // Add the icons to the DOM\r\n    if (iconsHtml) {\r\n      node.appendChild(\r\n        u.dom.createElement(`\r\n        <span class=\"dcs-icons\" title=\"Click to discuss this subsection\">\r\n          ${iconsHtml}\r\n        </span>\r\n      `)\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\nfunction getHtmlId(triggerNode, subsecNode) {\r\n  // Get the closest htmlId\r\n  // TEMPORARY TRICK: when triggerNode is null, we'll just generate an\r\n  // id not based on an html id\r\n  let beforeClean = triggerNode && findHtmlId(triggerNode, subsecNode)\r\n\r\n  // If no html id is found, generate a default one\r\n  if (!beforeClean) {\r\n    beforeClean = `gen${htmlIdsNotFound.length}`\r\n    htmlIdsNotFound.push({\r\n      Text: triggerNode.innerText.trim(),\r\n      'Generated Id': beforeClean\r\n    })\r\n  }\r\n\r\n  // Generate an htmlId compatible with a lowercase 20 characters Discourse tag\r\n  const maxLength = DcsTag.getSettings().maxTriggerIdLength\r\n  let afterClean = DcsTag.cleanPart(beforeClean, maxLength)\r\n\r\n  // Check for htmlId duplicates after truncation\r\n  if (htmlIds.includes(afterClean)) {\r\n    const save = afterClean\r\n    for (let i = 1; ; ++i) {\r\n      const iStr = i.toString()\r\n      u.throwIf(iStr.length > maxLength, 'too many duplicated html ids')\r\n      const truncated = save.substring(0, maxLength - iStr.length)\r\n      afterClean = truncated + iStr\r\n      if (!htmlIds.includes(afterClean)) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  // Store the id for later deduplication\r\n  htmlIds.push(afterClean)\r\n\r\n  return afterClean\r\n}\r\n\r\nfunction findHtmlId(triggerNode, subsecNode) {\r\n  // First candidate is the node id\r\n  if (triggerNode.id) {\r\n    return triggerNode.id\r\n  }\r\n\r\n  // Second candidate is the id of a child element of the trigger\r\n  const nodesWithId = triggerNode.querySelectorAll('[id]:not([id=\"\"])')\r\n  if (nodesWithId.length) {\r\n    return nodesWithId[0].id\r\n  }\r\n\r\n  // Third candidate is the id of a parent that doesn't already contains a\r\n  // trigger. This allows to go back the DOM tree and find sections containing\r\n  // many headings, like in OpenSTack docs.\r\n  let parent = triggerNode.parentElement\r\n  while (parent) {\r\n    if (parent.getElementsByClassName('dcs-trigger').length) {\r\n      break\r\n    }\r\n    if (parent.id) {\r\n      return parent.id\r\n    }\r\n    parent = parent.parentElement\r\n  }\r\n\r\n  // Fourth candidate is any id in the subsec\r\n  if (subsecNode) {\r\n    const subsecNodesWithId = subsecNode.querySelectorAll('[id]:not([id=\"\"])')\r\n    if (subsecNodesWithId.length) {\r\n      return subsecNodesWithId[0].id\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nfunction includes(pageName, pageNames) {\r\n  return pageNames[0] === '*' || pageNames.includes(pageName)\r\n}\r\n"],"names":["u","windowName","res","window","name","trim","document","title","require","__dirname","substring","log","args","console","logError","logWarning","DocussError","Error","[object Object]","msg","super","this","throw","throwIf","cond","throwIfNot","dev","assert","inIFrame","self","top","e","async","p","t","Promise","race","then","v","delay","ms","resolve","setTimeout","retry","fn","retries","reject","err","fnDelayed","retryDelay","find","array","length","slice","undefined","dom","onDOMReady","readyState","addEventListener","nodeList","callback","scope","list","i","call","wrap","el","wrapper","parentNode","insertBefore","appendChild","elArray","copyArray","Array","prototype","forEach","htmlString","div","createElement","innerHTML","firstChild","dot","obj","value","split","lastName","pop","reduce","o","n","get","DcsTag","_PREFIX","_TAG_PART_REGEX","_settings","settings","maxPageNameLength","maxTriggerIdLength","forceLowercase","getSettings","_checkInit","build","pageName","triggerId","checkPartThrow","dcsTag","shift","checkPart","maxTagLength","part","maxLength","match","forceLowercaseTags","toLowerCase","cleanPart","replace","BellhopEventDispatcher","_listeners","priority","_priority","parseInt","indexOf","push","sort","listenerSorter","a","b","index","splice","event","data","type","Bellhop","id","Math","random","connected","isChild","connecting","origin","_sendLater","iframe","message","target","source","onConnectionReceived","JSON","parse","error","trigger","postMessage","send","disconnect","HTMLIFrameElement","supported","receive","bind","removeEventListener","stringify","runOnce","on","internalCallback","off","parent","contentWindow","comToPlugin","_bellhop","_timer","_onConnected","clearTimeout","discourseOrigin","onConnected","timeout","onTimeout","connect","cb","route","mode","clientContext","arguments","hash","category","discourseTitle","redirects","_scrollIntoViewIfNeeded","rect","getBoundingClientRect","innerHeight","bottom","scrollIntoView","scrollBy","htmlBased","selTriggerNode","resizeTimer","onDiscourseRoutePushed","_onDiscourseRoutePushed","onCountsChanged","counts","resolveInit","descr","staticPages","page","parsedUrl","URL","location","href","url","getElementsByTagName","dataset","dcsDiscourseLink","onclick","preventDefault","stopPropagation","postSetDiscourseRoute","layout","path","pathname","postSetHash","referrer","nodes","getElementsByClassName","ids","node","dcsTriggerId","highlightable","dcsHighlightable","Object","keys","filter","map","src","showRight","dest","postSetRedirects","querySelectorAll","getSelection","toString","triggerNode","closest","_selectTriggers","dcsPageName","interactMode","dcsInteractMode","runReady","evt","delayedRoute","init","querySelector","dcsCategory","documentElement","dcsDiscourseTitle","postSetRouteProps","classList","remove","triggerNodes","add","subsec","htmlIds","htmlIdsNotFound","addTrigger","subsecNode","ui","cssSelector","getHtmlId","insertTextSpan","w","createTreeWalker","NodeFilter","SHOW_TEXT","textNode","nextNode","iconsHtml","insertBalloon","insertCountBadge","record","r","count","beforeClean","nodesWithId","parentElement","subsecNodesWithId","findHtmlId","Text","innerText","Generated Id","afterClean","includes","save","iStr","pageNames","decorator","clientData","injectCss","concat","css","join","head","pageProps","pageProperties","pageTriggers","injectTriggers","pageCounts","c","triggers","isArray","subsection","s","beginNodes","begin","bn","end","endSelector","subsecNodes","sibling","nextSibling","nodeType","matches","subsecWrapper","wrapAll","addSubsections","modifyDom","parseDom","catch"],"mappings":"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"}